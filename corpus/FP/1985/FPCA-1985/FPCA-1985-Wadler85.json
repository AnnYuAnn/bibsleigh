{
	"author": "Philip Wadler",
	"booktitle": "Proceedings of the Second Conference on Functional Programming Languages and Computer Architecture",
	"booktitleshort": "FPCA",
	"dblpkey": "conf/fpca/Wadler85",
	"doi": "10.1007/3-540-15975-4_33",
	"isbn": "3-540-15975-4",
	"pages": "113-128",
	"publisher": "Springer-Verlag",
	"publishershort": "Springer",
	"series": "Lecture Notes in Computer Science",
	"seriesshort": "LNCS",
	"stemmed": ["how", "to", "replac", "failur", "by", "a", "list", "of", "success", "a", "method", "for", "except", "handl", "backtrack", "and", "pattern", "match", "in", "lazi", "function", "languag"],
	"tag": ["backtracking", "exception", "functional", "how", "lazy evaluation", "pattern matching"],
	"title": "How to Replace Failure by a List of Successes: A method for exception handling, backtracking, and pattern matching in lazy functional languages",
	"type": "inproceedings",
	"venue": "FPCA",
	"volume": 201,
	"year": 1985
}